import { MyContext } from '../types/bot'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

export async function setChannel(ctx: MyContext) {
  const parts = (ctx.message as any)?.text?.split(' ')
  if (!parts || parts.length !== 3) {
    return ctx.reply('‚ùó –§–æ—Ä–º–∞—Ç: /set-channel <—Å–µ–∫—Ä–µ—Ç> <https://t.me/channel>')
  }

  const [, secret, url] = parts

  if (secret !== process.env.CHANNEL_SECRET) {
    return ctx.reply('üö´ –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ.')
  }

  const match = url.match(/t\.me\/([a-zA-Z0-9_]+)/)
  if (!match) return ctx.reply('‚ùó –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª.')

  const username = match[1]

  try {
    const msg = await ctx.telegram.sendMessage(`@${username}`, 'üõ†Ô∏è –ö–∞–Ω–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ —Ü–µ–ª–µ–≤–æ–π.')

    // –£–¥–∞–ª–∏–º —Å—Ç–∞—Ä—ã–π, —Å–æ—Ö—Ä–∞–Ω–∏–º –Ω–æ–≤—ã–π
    await prisma.channel.deleteMany()
    await prisma.channel.create({
      data: {
        username,
      }
    })

    return ctx.reply(`‚úÖ –ö–∞–Ω–∞–ª @${username} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.`)
  } catch (err) {
    console.error(err)
    return ctx.reply('‚ùó –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –∫–∞–Ω–∞–ª. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω.')
  }
}
