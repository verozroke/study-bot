// src/commands/set-channel.ts
import { MyContext } from '../types/bot'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()


export async function setChannel(ctx: MyContext) {
  const parts = (ctx.message as any)?.text?.split(' ')
  if (!parts || parts.length !== 4) {
    return ctx.reply('‚ùó –§–æ—Ä–º–∞—Ç: /setchannel <—Å–µ–∫—Ä–µ—Ç> <https://t.me/groupchat> <–ø–æ—Ä—è–¥–∫–æ–≤—ã–π_–Ω–æ–º–µ—Ä_—Ç–æ–ø–∏–∫–∞>')
  }

  const [, secret, url, threadId] = parts

  if (secret !== process.env.CHANNEL_SECRET) {
    return ctx.reply('üö´ –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ.')
  }

  const match = url.match(/t\.me\/([a-zA-Z0-9_]+)/)
  if (!match) return ctx.reply('‚ùó –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç.')

  const username = match[1]

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    const chat = await ctx.telegram.getChat(`@${username}`)
    if (!chat || !chat.id) {
      return ctx.reply('‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –≥—Ä—É–ø–ø—ã.')
    }


    await prisma.channel.deleteMany()
    await prisma.channel.create({
      data: {
        username,
        groupId: BigInt(chat.id),
        messageThreadId: parseInt(threadId),
      }
    })

    return ctx.reply(`‚úÖ –ì—Ä—É–ø–ø–∞ @${username} –∏ —Ç–æ–ø–∏–∫ "${threadId}" —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.`)
  } catch (err) {
    console.error(err)
    return ctx.reply('‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≥—Ä—É–ø–ø—ã –∏ —Ç–æ–ø–∏–∫–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º.')
  }
}
