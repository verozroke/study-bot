// src/scenes/rahmetiki.ts
import { Scenes, Markup } from 'telegraf'
import { MyContext } from '../types/bot'
import fs from 'fs'
import path from 'path'
import { PrismaClient } from '@prisma/client'
import { escapeMarkdownV2 } from '../utils/escape'
const u = (s: string) => escapeMarkdownV2(s);

const prisma = new PrismaClient()

const schools = [
  "Aldi BI",
  "BINOM - –∏–º. –ö.–°–∞—Ç–ø–∞–µ–≤–∞",
  "BINOM - –∏–º. –ê. –ë”©–∫–µ–π—Ö–∞–Ω–∞",
  "BINOM - –∏–º. “ö–∞–¥—ã—Ä –ú—ã—Ä–∑–∞ ”ò–ª—ñ",
  "BINOM - –∏–º. –ê. –ë–∞–π—Ç“±—Ä—Å—ã–Ω“±–ª—ã",
  "BINOM - –∏–º. –´. –ê–ª—Ç—ã–Ω—Å–∞—Ä–∏–Ω–∞",
  "BINOM - –∏–º. ”ò. –ö–µ–∫—ñ–ª–±–∞–µ–≤–∞",
  "BINOM - –∏–º. –î. “ö–æ–Ω–∞–µ–≤–∞",
  "BINOM - –∏–º. ”ò–ª-–§–∞—Ä–∞–±–∏",
  "–£–ö BINOM",
  "FARABI –®—ã–º–∫–µ–Ω—Ç",
  "FARABI –ê—Ç—ã—Ä–∞—É",
  "–£–ö FARABI",
  "RIVIERA International school",
  "Quantum TECH",
  "Quantum STEM",
  "QMC",
  "BI Education"
];

const rahmetikScene = new Scenes.WizardScene<MyContext>(
  'rahmetiki-wizard',

  // –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ username
  async (ctx) => {
    await ctx.reply(
      `üíå –•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫—É —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é? –û—Ç–ª–∏—á–Ω–æ! üòä –í —á–∞—Ç–µ ¬´–ê–ª“ì—ã—Å —Å”©–∑–¥–µ—Ä—ñ¬ª –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ –ø—Ä–∏–º–µ—Ä—ã.

‚úçÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å Telegram username (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å @) ‚Äî —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.

üìå–ü—Ä–∏–º–µ—Ä: –ê–π–≥—É–ª—å –ê—Ö–º–µ—Ç–æ–≤–∞, @aigul_akhmetova`,
      Markup.keyboard([['‚ùå –û—Ç–º–µ–Ω–∞']]).oneTime().resize()
    )
    return ctx.wizard.next()
  },

  // –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∫–æ–ª—ã
  async (ctx) => {
    if ('text' in ((ctx.message as any) || {})) {
      (ctx.wizard.state as any).recipient = (ctx.message as any).text
      await ctx.reply('üè´ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏?', Markup.keyboard(
        schools.map(name => [name])
      ).oneTime().resize())
      return ctx.wizard.next()
    }
    await ctx.reply('‚ùó –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–æ–ª—É—á–∞—Ç–µ–ª—è.')
  },

  // –®–∞–≥ 3: –®–∫–æ–ª–∞ ‚Üí –ß—Ç–æ —Å–¥–µ–ª–∞–ª(–∞)
  async (ctx) => {
    if ('text' in ((ctx.message as any) || {})) {
      (ctx.wizard.state as any).school = (ctx.message as any).text
      await ctx.reply(
        `–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø–æ–¥—É–º–∞–µ–º, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É –æ—Ç–∫—Ä—ã—Ç–∫—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∫–æ–ª–ª–µ–≥–µ –±–æ–ª–µ–µ —Ç—ë–ø–ª–æ–π –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π üíå

‚úçÔ∏è–ß—Ç–æ —Å–¥–µ–ª–∞–ª(–∞) –≤–∞—à–∞ –∫–æ–ª–ª–µ–≥–∞?
–ü–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫–æ–π –ø–æ—Å—Ç—É–ø–æ–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ—Ç–∏—Ç—å –∏ —á–µ–º –æ–Ω –ø–æ–º–æ–≥ –∫–æ–º–∞–Ω–¥–µ, –≤–∞–º –∏–ª–∏ —à–∫–æ–ª–µ.

üìå –ù–∞–ø—Ä–∏–º–µ—Ä: –ø–æ–º–æ–≥ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é, —Å—Ç–∞–ª–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª –∏–¥–µ—é... —ç—Ç–æ –ø–æ–º–æ–≥–ª–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ —Å—Ä–æ–∫, —É–¥–µ—Ä–∂–∞—Ç—å –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Ç–¥.`
      )

      Markup.removeKeyboard()
      return ctx.wizard.next()
    }
    await ctx.reply('‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —à–∫–æ–ª—É –∏–∑ —Å–ø–∏—Å–∫–∞.')
  },

  // –®–∞–≥ 4: –ö–∞—á–µ—Å—Ç–≤–∞
  async (ctx) => {
    if ('text' in ((ctx.message as any) || {})) {
      (ctx.wizard.state as any).what = (ctx.message as any).text
      await ctx.reply(
        `‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ,–∫–∞–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –≤–∞—à –∫–æ–ª–ª–µ–≥–∞? –ü–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫–æ–π —Å—É–ø–µ—Ä—Å–∏–ª–æ–π –æ–Ω –æ–±–ª–∞–¥–∞–µ—Ç?

üìå–ù–∞–ø—Ä–∏–º–µ—Ä: –µ–≥–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–∏–ª–∞ –∫–æ–º–∞–Ω–¥—É, –µ–≥–æ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–µ–ª–∞ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã...`
      )
      return ctx.wizard.next()
    }
    await ctx.reply('‚ùó –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.')
  },

  // –®–∞–≥ 5: –í—ã–±–æ—Ä —Å—Ç–∏–ª—è
  async (ctx) => {
    if ('text' in ((ctx.message as any) || {})) {
      (ctx.wizard.state as any).qualities = (ctx.message as any).text
      await ctx.reply(
        `üéÅ –ü–æ–¥–±–µ—Ä—ë–º –æ—Ç–∫—Ä—ã—Ç–∫—É!
–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∞—à–µ–≥–æ –∫–æ–ª–ª–µ–≥–∏ ‚Äî –∏ –º—ã –Ω–∞–π–¥—ë–º –æ—Ç–∫—Ä—ã—Ç–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–¥–∞—ë—Ç —ç—Ç–æ —Ç—ë–ø–ª–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ üåü`,
        Markup.inlineKeyboard([
          [Markup.button.callback('–ü–æ—Ä—è–¥–æ—á–Ω–æ—Å—Ç—å', 'style_decency')],
          [Markup.button.callback('–≠–º–ø–∞—Ç–∏—è', 'style_empathy')],
          [Markup.button.callback('–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ', 'style_develop')],
          [Markup.button.callback('–£—Å–µ—Ä–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'style_work')],
          [Markup.button.callback('–ú—ã - –ª—É—á—à–∞—è –∫–æ–º–∞–Ω–¥–∞', 'style_team')],
          [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')]
        ])
      )
      return ctx.wizard.next()
    }
    await ctx.reply('‚ùó –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.')
  },

  // –®–∞–≥ 6: –û—Ç –∫–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
  async (ctx) => {
    const data = (ctx.update as any)?.callback_query?.data
    if (!data) return ctx.reply('‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å.');

    (ctx.wizard.state as any).style = data.replace('style_', '')
    await ctx.answerCbQuery()
    await ctx.reply('‚ú® –ü–æ—Å–ª–µ–¥–Ω–∏–π —à—Ç—Ä–∏—Ö ‚Äî –æ—Ç –∫–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏–º –æ—Ç–∫—Ä—ã—Ç–∫—É? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ê–π–¥–∞–Ω–∞)')
    return ctx.wizard.next()
  },

  // –®–∞–≥ 7: –°–±–æ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
  async (ctx) => {
    if (!('text' in ((ctx.message as any) || {}))) return ctx.reply('‚ùó –í–≤–µ–¥–∏—Ç–µ –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.');
    (ctx.wizard.state as any).sender = (ctx.message as any).text

    const { recipient, school, what, qualities, style, sender } = ctx.wizard.state as any

    const styleToImage: Record<string, string> = {
      decency: 'decency.png',
      empathy: 'empathy.png',
      develop: 'develop.png',
      work: 'work.png',
      team: 'team.png'
    }

    const image = styleToImage[style]
    if (!image) {
      await ctx.reply('‚ùó –û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∏–ª—å –æ—Ç–∫—Ä—ã—Ç–∫–∏.')
      return ctx.scene.leave()
    }

    const channel = await prisma.channel.findFirst()
    if (!channel || !channel.groupId || !channel.messageThreadId) {
      await ctx.reply('‚ùó –ì—Ä—É–ø–ø–∞ –∏–ª–∏ —Ç—Ä–µ–¥ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setchannel.')
      return ctx.scene.leave()
    }

    const imagePath = path.resolve(__dirname, '..', 'assets', 'rahmetiki', image)

    const caption = `
üåü *–ê–ª“ì—ã—Å –±—ñ–ª–¥—ñ—Ä–µ–º—ñ–Ω!*
üë§ *–ö–æ–º—É:* ${u(recipient)} 
üè´ *–®–∫–æ–ª–∞:* ${u(school)}

${u(what)}!
${u(qualities)}!

*‚úçÔ∏è ${u(sender)}*
    `

    await ctx.telegram.sendPhoto(channel.groupId.toString(), { source: fs.readFileSync(imagePath) }, {
      caption,
      parse_mode: 'Markdown',
    })

    await ctx.reply('üíå –í–∞—à–∞ –æ—Ç–∫—Ä—ã—Ç–∫–∞ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –ø—Ä–∏–Ω—è—Ç–∞ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ. –¢—ë–ø–ª—ã–µ —Å–ª–æ–≤–∞ ‚Äî —ç—Ç–æ —Å–∏–ª–∞.')
    return ctx.scene.leave()
  }
)

rahmetikScene.hears('‚ùå –û—Ç–º–µ–Ω–∞', async (ctx) => {
  await ctx.reply('‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', Markup.removeKeyboard())
  return ctx.scene.leave()
})

rahmetikScene.action('cancel', async (ctx) => {
  await ctx.answerCbQuery()
  await ctx.reply('‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.')
  return ctx.scene.leave()
})

export default rahmetikScene
